// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace rawg_api.Models;

public partial class rawg_dbContext : DbContext
{
    public rawg_dbContext(DbContextOptions<rawg_dbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Game> Games { get; set; }

    public virtual DbSet<Genre> Genres { get; set; }

    public virtual DbSet<ParentPlatform> ParentPlatforms { get; set; }

    public virtual DbSet<Store> Stores { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .UseCollation("utf8mb3_general_ci")
            .HasCharSet("utf8mb3");

        modelBuilder.Entity<Game>(entity =>
        {
            entity.HasKey(e => e.IdGames).HasName("PRIMARY");

            entity.HasMany(d => d.GenresIdGenres).WithMany(p => p.GamesIdGames)
                .UsingEntity<Dictionary<string, object>>(
                    "GamesHasGenre",
                    r => r.HasOne<Genre>().WithMany()
                        .HasForeignKey("GenresIdGenres")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_4abb9658bce4ff6197ea1cca5bb"),
                    l => l.HasOne<Game>().WithMany()
                        .HasForeignKey("GamesIdGames")
                        .HasConstraintName("FK_286915c8e023ac352064d4a5b23"),
                    j =>
                    {
                        j.HasKey("GamesIdGames", "GenresIdGenres")
                            .HasName("PRIMARY")
                            .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });
                        j.ToTable("games_has_genres");
                        j.HasIndex(new[] { "GamesIdGames" }, "IDX_286915c8e023ac352064d4a5b2");
                        j.HasIndex(new[] { "GenresIdGenres" }, "IDX_4abb9658bce4ff6197ea1cca5b");
                        j.IndexerProperty<int>("GamesIdGames").HasColumnName("games_id_games");
                        j.IndexerProperty<int>("GenresIdGenres").HasColumnName("genres_id_genres");
                    });

            entity.HasMany(d => d.ParentPlatformsIdParentPlatforms).WithMany(p => p.GamesIdGames)
                .UsingEntity<Dictionary<string, object>>(
                    "GamesHasParentPlatform",
                    r => r.HasOne<ParentPlatform>().WithMany()
                        .HasForeignKey("ParentPlatformsIdParentPlatforms")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_08cf1bda3d3d51adcddc6490bfc"),
                    l => l.HasOne<Game>().WithMany()
                        .HasForeignKey("GamesIdGames")
                        .HasConstraintName("FK_e74e38620185576df76ce399f28"),
                    j =>
                    {
                        j.HasKey("GamesIdGames", "ParentPlatformsIdParentPlatforms")
                            .HasName("PRIMARY")
                            .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });
                        j.ToTable("games_has_parent_platforms");
                        j.HasIndex(new[] { "ParentPlatformsIdParentPlatforms" }, "IDX_08cf1bda3d3d51adcddc6490bf");
                        j.HasIndex(new[] { "GamesIdGames" }, "IDX_e74e38620185576df76ce399f2");
                        j.IndexerProperty<int>("GamesIdGames").HasColumnName("games_id_games");
                        j.IndexerProperty<int>("ParentPlatformsIdParentPlatforms").HasColumnName("parent_platforms_id_parent_platforms");
                    });

            entity.HasMany(d => d.StoresIdStores).WithMany(p => p.GamesIdGames)
                .UsingEntity<Dictionary<string, object>>(
                    "GamesHasStore",
                    r => r.HasOne<Store>().WithMany()
                        .HasForeignKey("StoresIdStores")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_edd850d68a139bc819e9d9710c5"),
                    l => l.HasOne<Game>().WithMany()
                        .HasForeignKey("GamesIdGames")
                        .HasConstraintName("FK_d4cb7f16f66c16613310be44dd1"),
                    j =>
                    {
                        j.HasKey("GamesIdGames", "StoresIdStores")
                            .HasName("PRIMARY")
                            .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });
                        j.ToTable("games_has_stores");
                        j.HasIndex(new[] { "GamesIdGames" }, "IDX_d4cb7f16f66c16613310be44dd");
                        j.HasIndex(new[] { "StoresIdStores" }, "IDX_edd850d68a139bc819e9d9710c");
                        j.IndexerProperty<int>("GamesIdGames").HasColumnName("games_id_games");
                        j.IndexerProperty<int>("StoresIdStores").HasColumnName("stores_id_stores");
                    });
        });

        modelBuilder.Entity<Genre>(entity =>
        {
            entity.HasKey(e => e.IdGenres).HasName("PRIMARY");
        });

        modelBuilder.Entity<ParentPlatform>(entity =>
        {
            entity.HasKey(e => e.IdParentPlatforms).HasName("PRIMARY");
        });

        modelBuilder.Entity<Store>(entity =>
        {
            entity.HasKey(e => e.IdStores).HasName("PRIMARY");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}